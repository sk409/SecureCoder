{
    "index": 0,
    "fileName": "welcome.php",
    "explainers": [
        {
            "questionIndices": [],
            "focusLabels": [],
            "focusComponents": [
                
            ],
            "messages": [
                {
                    "text": "これはユーザの名前と年齢を受け取って登録するだけの簡単なWebページです。\n今回はこのWebページ内にあえて脆弱性を作り込み、どのようなコードを書くと脆弱性となってしまうのかを学習します。",
                    "languages": []
                }
            ]
        },
        {
            "questionIndices": [],
            "focusLabels": [
                
            ],
            "focusComponents": [
                [4],
                [7]
            ],
            "messages": [
                {
                    "text": "1つは問題としてあるため空欄になっていますが、赤枠で囲まれた部分でユーザの名前と年齢を<input>要素のvalue属性に設定してあります。\nこれは確認ページから戻ってきた場合など、ユーザが一度入力したデータを表示しておくためです。",
                    "languages": ["html"]
                },
                {
                    "text": "しかし、このページのコード全体に言えることですが、属性値を引用符で囲っていないためvalue属性に設定される値によっては直接コードを埋め込むことが可能になってしまっています。",
                    "languages": ["html"]
                },
                {
                    "text": "属性値が引用符で囲まれていない場合、区切り文字としてスペースが使われます。\nつまりvalue属性にスペースを含む値が設定されていた場合、スペース以降は全く独立したコードとして扱われます。",
                    "languages": ["html"]
                },
                {
                    "text": "例えば、value属性の値が次のように設定されていたとします。",
                    "languages": ["html"]
                },
                {
                    "text": "1 id=test",
                    "languages": []
                },
                {
                    "text": "これが例えば名前の<input>要素に設定された場合、<input>要素全体は以下のようになります。\n<input type=text name=name value=1 id=test>",
                    "languages": ["html"]
                },
                {
                    "text": "この場合、このvalue属性が設定された<input>要素のid属性がtestに設定されます。",
                    "languages": ["html"]
                },
                {
                    "text": "今回の例ではhtmlspecialcharsを用いてしっかりと特殊文字のエスケープを行なっていますが、スペースはエスケープの対象ではないため、攻撃を防ぐことはできません。\nさらにこの攻撃はvalue属性に限らず全ての属性で成立します。",
                    "languages": [
                        "html"
                    ]
                },
                {
                    "text": "このように属性値を引用符で囲まないのはとても危険なので、必ず引用符で囲むようにしましょう。",
                    "languages": []
                },
                {
                    "text": "今回はあえて引用符で囲まずに属性値を記述することで、どのような攻撃を受けてしまうのかを体験します。\n具体的には、GETリクエストで受け取ったnameの値を引用符で囲まずに出力します。",
                    "languages": []
                },
                {
                    "text": "なお、これから書くコードには脆弱性があるため、実際に開発を行う場合には絶対に同じコードを書かないでください。",
                    "languages": []
                }
            ]
        },
        {
            "questionIndices": [0],
            "focusLabels": [],
            "focusComponents": [],
            "messages": [
                {
                    "text": "属性値を引用符で囲っていないため、スペースが含まれた値を設定されると直接コードを埋め込まれてしまいます。\nそれでは次に攻撃側のスクリプトを見ていきましょう。",
                    "languages": []
                }
            ]
        }
    ]
}